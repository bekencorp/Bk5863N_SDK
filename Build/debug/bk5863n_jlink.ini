FUNC  void flash_init (void) {
  unsigned int reg_val;
	unsigned int sec10,sec11;
	sec10 = sec11 = (444/4);  ///256K/4K

	_WDWORD(0x00b0001c, (_RDWORD(0x00b0001c))&(~(1<<26)));

  // flash status register data to be written
	reg_val = _RDWORD(0x00b0001c);
	reg_val &= (~(0xffff<<10));

	_WDWORD(0x00b0001c,reg_val);
	  // flash FINE1
	_WDWORD(0x00b0001c, (_RDWORD(0x00b0001c))&(~(0x1F<<4)));
	_WDWORD(0x00b0001c, ((_RDWORD(0x00b0001c))&(~(0xFUL<<0)))|(0x08<<0));
    // cpu data writting enable
	_WDWORD(0x00b0001c, (_RDWORD(0x00b0001c))|(1<<9));

	// flash operation command : WRSR
	reg_val = _RDWORD(0x00b00000);
	reg_val &= (~(0x1f<<24));                  // clr op_type_sw
	reg_val |= (0x04<<24) | (1<<29) | (1<<30); // op_sw, wp_value
	_WDWORD(0x00b00000, reg_val);
	_sleep_(10);
	while(_RDWORD(0x00b00000) & (0x01<<31)){;}
		
			
//	#if 1
			// flash operation command : SE
		while(sec11)
		{
			reg_val = _RDWORD(0x00b00000);
			reg_val &= (~(0x1fFFFFFF));                  // clr op_type_sw
			reg_val |= ((13<<24) | (1<<29) | (1<<30)); // op_sw, wp_value
			reg_val |= (4*1024)*(sec10-sec11);
			_WDWORD(0x00b00000, reg_val);
			_sleep_(10);
			while(_RDWORD(0x00b00000) & (0x01<<31)){;}
			sec11--;
		}
//	#else
//		// flash operation command : CE
//		reg_val = _RDWORD(0x00b00000);
//		reg_val &= (~(0x1f<<24));                  // clr op_type_sw
//		reg_val |= (0x10<<24)|(1<<29)|(1<<30); // op_sw, wp_value
//		_WDWORD(0x00b00000, reg_val);
//		_sleep_(10);
//		while(_RDWORD(0x00b00000) & (0x01<<31)){;}
//	#endif
}

FUNC void flash_Pre(void)
{
	 unsigned int reg_val;

	_RDWORD(0x00);
	_RDWORD(0x08);
	_RDWORD(0x010);
	_RDWORD(0x080);
	_WDWORD(0x00b0001c, (_RDWORD(0x00b0001c))&(~(1<<26)));

    // flash status register data to be written
//  _WDWORD(0x00b0001c, (_RDWORD(0x00b0001c))&(~(0xffff<<10)));
	reg_val = _RDWORD(0x00b0001c);
	reg_val &= (~(0xffff<<10));
	reg_val |= (0x08bc<<10);
//	reg_val &= (~(0x40<<10));
	_WDWORD(0x00b0001c,reg_val);
	  // flash FINE1
	_WDWORD(0x00b0001c, (_RDWORD(0x00b0001c))&(~(0x1F<<4)));

    // cpu data writting enable
	_WDWORD(0x00b0001c,(_RDWORD(0x00b0001c)&(~(1<<9))));

	// flash operation command : WRSR
	reg_val = _RDWORD(0x00b00000);
	reg_val &= (~(0x1f<<24));                  // clr op_type_sw
	reg_val |= (0x07<<24) | (1<<29) | (1<<30); // op_sw, wp_value
	_WDWORD(0x00b00000, reg_val);
	_sleep_(10);
	while(_RDWORD(0x00b00000) & (0x01<<31)){;}
}

flash_init();

LOAD ./Build/Output/Bk5863N.axf INCREMENTAL 


flash_Pre();
